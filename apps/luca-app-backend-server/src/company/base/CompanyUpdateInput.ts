/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested } from "class-validator";
import { LocationGroupUpdateManyWithoutCompaniesInput } from "./LocationGroupUpdateManyWithoutCompaniesInput";
import { Type } from "class-transformer";
import { LocationUpdateManyWithoutCompaniesInput } from "./LocationUpdateManyWithoutCompaniesInput";
import { UserUpdateManyWithoutCompaniesInput } from "./UserUpdateManyWithoutCompaniesInput";

@InputType()
class CompanyUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  city?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  country?: string | null;

  @ApiProperty({
    required: false,
    type: () => LocationGroupUpdateManyWithoutCompaniesInput,
  })
  @ValidateNested()
  @Type(() => LocationGroupUpdateManyWithoutCompaniesInput)
  @IsOptional()
  @Field(() => LocationGroupUpdateManyWithoutCompaniesInput, {
    nullable: true,
  })
  locationGroups?: LocationGroupUpdateManyWithoutCompaniesInput;

  @ApiProperty({
    required: false,
    type: () => LocationUpdateManyWithoutCompaniesInput,
  })
  @ValidateNested()
  @Type(() => LocationUpdateManyWithoutCompaniesInput)
  @IsOptional()
  @Field(() => LocationUpdateManyWithoutCompaniesInput, {
    nullable: true,
  })
  locations?: LocationUpdateManyWithoutCompaniesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutCompaniesInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutCompaniesInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutCompaniesInput, {
    nullable: true,
  })
  users?: UserUpdateManyWithoutCompaniesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  zipCode?: string | null;
}

export { CompanyUpdateInput as CompanyUpdateInput };
